###########################
##   Graph Communities   ##
###########################

echo "------ Community Grapher ------"

# Create necessary directories and variables
dir_name=$(dirname $0)
dir_name=${dir_name#"./"}
path="$1"
graph="$2"
output_format="$3"
detail="$4"
mkdir -p output

if [ -z "$path" ] || [ -z "$graph" ]; then
   echo "Command should be of the following format: ./CommunityGrapher <file path> <graphviz or ubigraph> <optional: output_format (svg, pdf (default), ...)> <optional: Y for higher detail, n for low detail (less time and default)>"
else
  # Build random if desired
  if [ "$path" -eq "random" ]; then
    echo "Please enter number of variables:"
	  read vars
	  echo "Please enter number of clauses:"
	  read clauses
	  echo "Please enter number of communities:"
	  read cmtys
	  echo "Please enter quality of communities:"
	  read q

	  echo "Generating dimacs file"
	  "$dir_name"/../Haskell/Cmty $vars $clauses $cmtys $q > "$dir_name"/output/community.dimacs
	  path="$dir_name/output/community.dimacs"
  else
    # Set default value for detail
    if [ -z "$detail" ]; then
      detail="n"
    fi
    # Set default value for output format
    if [ -z "$output_format" ]; then
      output_format="pdf"
    fi
    
    # Start grapher
    ./"$dir_name"/Helpers/graphHelper.rb $path $graph $detail grapher $path $output_format
  fi
fi
